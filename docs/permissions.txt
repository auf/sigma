Description
===========

Le workflow utilisé dans Sigma implémente la notion de permissions et de groupes
afin de pouvoir gérer les différents type de droits qui peuvent être attribuer
aux utilisateurs.

En effet, il existe dans le système la notion de groupe telle que:

   # Administrateur
   C'est l'utilisateur tout puissant, celui qui a le droit de toute faire,
   peu importe sa région et son statut. On utilise la notion d'administreur
   au même titre que cela est implanté dans Django: 

   http://docs.djangoproject.com/en/dev/topics/auth/#creating-superusers

   # Responsable régional
   Ce sont les utilisateurs tout puissant dans leur régions, ils ont le droit
   de faire les mêmes actions que ceux du groupe saisie et validation.

   # Saisie
   Ce sont les utilisateurs qui ont le droit de faire de l'entrée de données
   dans le système. C'est-à-dire qu'ils peuvent faire une première saisie lors
   de l'étape de diffusion d'un appel d'offre. Ils ne peuvent donc pas faire
   passer une candidature d'un statut à un autre.

   # Validation
   Ce sont les utilsateurs qui sont en charge de valider les informations
   d'une candidature et ainsi de la faire évoluer au travers différentes étapes
   qui la mène vers la bourse et la cloture de son dossier.

De plus, pour les utilisateurs normaux, soit tous ceux qui ne sont pas 
administrateurs, ils sont asssociés à des régions. En effet, on a un groupe
Responsable Régional, Saisie et Validation par région. Cela nous permet donc
de rafiner les droits d'un individus à la région et au niveau de responsabilité
dans chacune.


Attribution des droits
======================

Pour attribuer des droits à un utilisateur il faut passer par le panneaux 
d'administration de django et d'assigner des groupes à un utilisateur. Cela 
respecte donc le façon de faire sous Django et s'intègre complètement à notr
workflow.


Les droits dans le code
=======================

Au travers du workflow et des vues, on vérifie les droits de l'utilisateur 
courant afin de s'assurer que toutes les contraintes de sécurités sont 
respectées. Ainsi, pour nous faciliter la vie on peut retrouver des décorateurs
dans le module suivant::

     # sigmawww.workflow.decorator

Et des outils d'analyse propres aux objets du modèle dans chacun des modules 
correspondant::

     # sigmawww.workflow.candidature
     # sigmawww.workflow.appel (check_region, ...)

De plus, dans les vues nous vérifions à plusieurs endroits si l'utilisateur
courant est tout simplement connecté afin de ne pas perdre de temps et des 
ressources avec des gens qui tentent de manipuler nos urls.

Notons que les vérifications de permissions sont faites dans les méthodes du
workflow et sont considérés comme des erreurs systèmes. Qui bloquent 
l'avancement et donc le changement de statut d'un objet et qui est possiblement
rapporté dans les logs.



          				


